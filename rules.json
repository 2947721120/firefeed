{
  "rules": {
    "people": {
      ".read": "true",
      "$userid": {
        ".write": "$userid == auth.userid"
      }
    },
    "users": {
      "$userid": {
        ".read": "$userid == auth.userid",
        "sparks": {
          ".write": "$userid == auth.userid"
        },
        "following": {
          ".write": "$userid == auth.userid",
          "$followerid": {
            ".validate": "newData.isBoolean() && root.child('people').child($followerid).val() == true"
          }
        },
        "followers": {
          "$follower": {
            ".write": "$follower == auth.userid"
          }
        },
        "stream": {
          "$sparkid": {
            ".write": "auth.userid == $userid || root.child('users').child($userid).child('following').child(auth.userid).val() == true",
            ".validate": "data.val() == null && newData.hasChildren(['userid', 'sparkid'])",
            "userid": {
              ".validate": "newData.val() == auth.userid"
            }
          }
        }
      }
    },
    "sparks": {
      ".read": "true",
      "$sparkid": {
        ".write": "data.val() == null",
        ".validate": "newData.hasChildren(['author', 'content'])",
        "author": {
          ".validate": "newData.val() == auth.userid"
        },
        "content": {
          ".validate": "newData.isString()"
        }
      }
    }
  }
}